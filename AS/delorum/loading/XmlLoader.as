package delorum.loading{import flash.events.*;import flash.net.*;/*** 	Basic loader for xml* 	* 	@example Sample usage:* 	<listing version=3.0>* 		*	import delorum.loading.XmlLoader;*	var ldr:XmlLoader = new XmlLoader( 'testLoads/test.xml' );*	*	ldr.onComplete	= completeHandler;*	ldr.onError		= errorHandler;*	ldr.onProgress	= progressHandler;*	*	 // Add item to load queue... *	 ldr.addItemToLoadQueue(); *	 // ...or to load immediately: - *	 //ldr.loadItem();*	*	private function completeHandler ( e:Event ):void* 	{* 		trace( e.target.data );* 	}*	* 	</listing>* 	* 	@language ActionScript 3, Flash 9.0.0* 	@author   Mark Parson. 2007-11-27.* 	@rights	  Copyright (c) Delorum inc. 2008. All rights reserved	*/public class XmlLoader extends BaseLoader implements LoaderIF{	private var _xmlObj:XML;	private var _xmlRequest:URLRequest;	private var _xmlLoader:URLLoader		private var _loadedCallBack:Function;		/** 	*	Begin loading an xml file	*		*	@param		Path to the xml file	*	@param		Called when xml file load is complete	*/	public function XmlLoader( $xmlPath:String )	{		super();		_xmlRequest 	= new URLRequest( $xmlPath );		_xmlLoader 		= new URLLoader( );	}		override public function loadItem (  ):void	{		_xmlLoader.load( _xmlRequest );	}		override protected function isStillActive():Boolean	{		return true;	}		// ______________________________________________________________ Event dispatcher	override protected function get _eventListener (  ):EventDispatcher	{		return _xmlLoader;	}}}